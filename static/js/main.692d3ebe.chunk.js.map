{"version":3,"sources":["state/lol/games/gamesActions.ts","state/lol/games/gamesReducer.ts","state/root/rootReducer.ts","config/index.ts","state/lol/games/gamesApi.ts","state/lol/games/gamesSaga.ts","state/root/rootSaga.ts","state/store/configureStore.ts","Components/Pages/LoL/SearchGamesResultPage/withSearchGames.tsx","Components/PageRouter/PageRoutes.ts","Components/GameVideos/GameVideos.tsx","Components/Pages/LoL/SearchGamesResultPage/SearchGamesResultPage.tsx","Components/Common/LinkButton.tsx","Components/Pages/LoL/SearchGamesForm/SearchGamesForm.tsx","Components/Pages/LoL/SearchGamesLandingPage/SearchGamesLandingPage.tsx","Components/PageRouter/PageRouter.tsx","Components/AppLayout/AppLayout.tsx","Components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["SearchGamesAction","searchGamesResponse","response","type","SearchGamesResponse","INITIAL_STATE","undefined","rootReducer","combineReducers","searchGames","state","arguments","length","action","SearchGamesAsync","config","api","endpoint","request","url","concat","twitchLogin","summonerName","championName","fetch","then","res","json","resultJson","catch","error","console","JSON","stringify","watchSearchGamesAsync","regenerator_default","a","wrap","_context","prev","next","call","sent","put","stop","_marked","this","_context2","takeEvery","_marked2","rootSaga","all","fork","rootSaga_marked","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","mapStateToProps","ownProps","mapDispatchToProps","dispatch","PageId","GameVideos","_this","cards","props","gameVideos","map","gameVideo","title","react_default","createElement","video","summoner","name","champion","colKey","game","id","gameStartTime","moment","startTimestamp","calendar","col","span","key","data-game-id","data-twitch-video-id","card","bordered","href","target","src","getVideoThumbnail","style","width","padding","row","gutter","thumbnailImageUrl","replace","React","Component","SearchGamesResultPage","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","getPageContent","Components_GameVideos_GameVideos","LinkButton","es_button","Link","to","children","SearchGamesFormInner","onChange","e","preventDefault","form","getFieldValue","setState","getFieldDecorator","_this$state","itemLayout","labelCol","wrapperCol","es_form","Item","assign","label","initialValue","input","size","placeholder","Common_LinkButton","SearchGamesForm","Form","create","SearchGamesLandingPage","offset","textAlign","SearchGamesForm_SearchGamesForm","PageRoutes","SearchLolGamesResult","component","Wrapped","hocClass","_getPrototypeOf2","_len","args","Array","_key","searchGamesTimer","wrappedProps","match","params","prevProps","connectedHoc","connect","withRouter","withSearchGames","path","SearchLolGamesLanding","PageRouter","Switch","Route","exact","Content","Layout","AppLayout","layout","minHeight","margin","Components_PageRouter_PageRouter","App","es","HashRouter","Components_AppLayout_AppLayout","Boolean","window","location","hostname","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.692d3ebe.chunk.js","sourcesContent":["import {SearchGameVideosRequest, SearchGameVideosResponse} from \"./searchGamesModel\";\n\nexport type ISearchGamesAction = ISearchGamesAsyncAction |\n  ISearchGamesResultAction;\n\nexport enum SearchGamesAction {\n  SearchGamesAsync = \"SearchGamesAsync\",\n  SearchGamesResponse = \"SearchGamesResponse\"\n}\n\nexport interface ISearchGamesAsyncAction {\n  type: SearchGamesAction.SearchGamesAsync,\n  request: SearchGameVideosRequest\n}\n\nexport interface ISearchGamesResultAction {\n  type: SearchGamesAction.SearchGamesResponse,\n  response: SearchGameVideosResponse\n}\n\nexport function searchGames(request: SearchGameVideosRequest): ISearchGamesAsyncAction {\n  return {\n    type: SearchGamesAction.SearchGamesAsync,\n    request\n  }\n}\n\nexport function searchGamesResponse(response: SearchGameVideosResponse): ISearchGamesResultAction {\n  return {\n    type: SearchGamesAction.SearchGamesResponse,\n    response\n  }\n}\n","import {SearchGamesAction, ISearchGamesAction} from \"./gamesActions\";\nimport {SearchGameVideosResponse} from \"./searchGamesModel\";\n\nexport interface ISearchGamesState {\n  response?: SearchGameVideosResponse\n}\n\nexport const INITIAL_STATE: ISearchGamesState = {\n  response: undefined\n};\n\nexport function searchGamesReducer(\n  state: ISearchGamesState = INITIAL_STATE,\n  action: ISearchGamesAction\n): ISearchGamesState {\n  switch (action.type) {\n    case SearchGamesAction.SearchGamesAsync: {\n      return state;\n    }\n\n    case SearchGamesAction.SearchGamesResponse: {\n      return {\n        response: action.response\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport { searchGamesReducer as searchGames, ISearchGamesState } from \"../lol/games/gamesReducer\";\n\nexport interface IRootState {\n  searchGames: ISearchGamesState\n}\n\nexport const rootReducer = combineReducers<IRootState>({\n  searchGames\n});\n","interface ApiConfig {\n  endpoint: string;\n}\n\ninterface Config {\n  api: ApiConfig\n}\n\nfunction getConfig(): Config {\n  if (process.env[\"NODE_ENV\"] === \"production\") {\n    return {\n      api: {\n        endpoint: \"https://ojxt0rm912.execute-api.us-east-1.amazonaws.com/latest\"\n      }\n    }\n  } else {\n    return {\n      api: {\n        endpoint: \"http://localhost:5000/api\"\n      }\n    }\n  }\n}\n\nconst config = getConfig();\nexport default config;\n","import {SearchGameVideosRequest, SearchGameVideosResponse} from \"./searchGamesModel\";\nimport config from \"../../../config/index\"\n\nexport function searchGames(request: SearchGameVideosRequest): Promise<SearchGameVideosResponse> {\n  // /games/streamer/:twitchLogin/summoner/:summonerName/champion/:championName\n  const url = `${config.api.endpoint}/lol/games/streamer/${request.twitchLogin}/summoner/${request.summonerName}/champion/${request.championName}`;\n  const responsePromise = fetch(url);\n  return responsePromise\n    .then((res: Response) => {\n      return res.json();\n    }).then((resultJson: any) => {\n      return resultJson as SearchGameVideosResponse;\n    })\n    .catch((error: any) => {\n      console.error(\"searchGames failed\" + JSON.stringify(error));\n      throw \"searchGames failed\";\n    });\n}\n","import { call, takeEvery, put } from \"redux-saga/effects\";\n\nimport { SearchGameVideosResponse } from \"./searchGamesModel\";\nimport {SearchGamesAction, ISearchGamesAsyncAction, searchGamesResponse} from \"./gamesActions\";\nimport { searchGames } from \"./gamesApi\";\n\nexport function* SearchGamesAsync(action: ISearchGamesAsyncAction): IterableIterator<any> {\n  const response: SearchGameVideosResponse = yield call(searchGames, action.request);\n  yield put(searchGamesResponse(response))\n}\n\nexport function* watchSearchGamesAsync() {\n  yield takeEvery(\n    SearchGamesAction.SearchGamesAsync,\n    SearchGamesAsync\n  )\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport { watchSearchGamesAsync } from \"../lol/games/gamesSaga\";\n\nfunction* rootSaga() {\n  yield all([\n    fork(watchSearchGamesAsync)\n  ]);\n}\n\nexport default rootSaga;\n","import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { rootReducer } from \"../root/rootReducer\";\nimport rootSaga from \"../root/rootSaga\";\n\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\n","import React from \"react\";\n\nimport { RouteComponentProps } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { ISearchGamesState } from \"../../../../state/lol/games/gamesReducer\";\nimport { searchGames } from \"../../../../state/lol/games/gamesActions\";\nimport {SearchGameVideosRequest, SearchGameVideosResponse} from \"../../../../state/lol/games/searchGamesModel\";\n\nexport interface IWithSearchGamesProps {\n  response?: SearchGameVideosResponse,\n  request: SearchGameVideosRequest\n}\n\ninterface IDispatchProps {\n  searchGames: (request: SearchGameVideosRequest) => void;\n}\n\ninterface IWithSearchGamesHocProps\n  extends RouteComponentProps<{twitchLogin: string, summonerName: string, championName: string}>,\n    IDispatchProps,\n    IWithSearchGamesProps {\n\n}\n\nexport function withSearchGames<T extends IWithSearchGamesProps>(Wrapped: React.ComponentType<T>): any {\n  const hocClass = class extends React.Component<IWithSearchGamesHocProps> {\n    state = {\n      searchGamesTimer: undefined\n    };\n\n    public render() {\n      const wrappedProps: T = {\n        request: {\n          summonerName: this.props.match.params.summonerName,\n          twitchLogin: this.props.match.params.twitchLogin,\n          championName: this.props.match.params.championName\n        },\n        response: this.props.response\n      } as T;\n      return (<Wrapped {...wrappedProps} /> );\n    }\n\n    public componentDidMount() {\n      this.searchGames();\n    }\n\n    private searchGames() {\n      this.props.searchGames({\n        summonerName: this.props.match.params.summonerName,\n        twitchLogin: this.props.match.params.twitchLogin,\n        championName: this.props.match.params.championName\n      });\n    }\n\n    public componentDidUpdate(prevProps: IWithSearchGamesHocProps) {\n      if (\n        (prevProps.match.params.summonerName !== this.props.match.params.summonerName) ||\n        (prevProps.match.params.championName !== this.props.match.params.championName) ||\n        (prevProps.match.params.twitchLogin !== this.props.match.params.twitchLogin)\n      ) {\n        this.searchGames();\n      }\n    }\n  };\n\n  const connectedHoc = connect(mapStateToProps, mapDispatchToProps)(hocClass);\n  return withRouter(connectedHoc);\n}\n\ninterface IWithSearchGamesState {\n  searchGames: ISearchGamesState\n}\n\nexport function mapStateToProps(state: IWithSearchGamesState, ownProps: IWithSearchGamesHocProps): IWithSearchGamesProps {\n  return {\n    request: ownProps.request,\n    response: state.searchGames.response\n  }\n}\n\nexport function mapDispatchToProps(dispatch: any): IDispatchProps {\n  return {\n    searchGames: request => dispatch(searchGames(request))\n  };\n}\n","import { withSearchGames } from \"../Pages/LoL/SearchGamesResultPage/withSearchGames\";\nimport SearchGamesResultPage from \"../Pages/LoL/SearchGamesResultPage/SearchGamesResultPage\";\nimport SearchGamesLandingPage from \"../Pages/LoL/SearchGamesLandingPage/SearchGamesLandingPage\";\n\nexport enum PageId {\n  Hello = \"Hello\",\n  SearchLolGamesResult = \"SearchLolGamesResult\"\n}\n\nexport interface IPageRoute {\n  component: React.ComponentClass,\n  id: PageId,\n  path: string,\n  title: string\n}\n\nexport class PageRoutes {\n  public static SearchLolGamesResult: IPageRoute = {\n    component: withSearchGames(SearchGamesResultPage),\n    id: PageId.SearchLolGamesResult,\n    path: \"/lol/games/search/results/streamer/:twitchLogin/summoner/:summonerName/champion/:championName\",\n    title: \"LoL Games\"\n  };\n\n  public static SearchLolGamesLanding: IPageRoute = {\n    component: SearchGamesLandingPage,\n    id: PageId.SearchLolGamesResult,\n    path: \"/lol/games/search\",\n    title: \"Search For LoL Games\"\n  }\n}\n","import React from 'react';\nimport moment from \"moment\";\nimport { Card, Col, Row } from 'antd';\n\nimport { GameVideo, Video } from \"../../state/lol/games/searchGamesModel\";\n\n\n\ninterface IGameVideosProps {\n  gameVideos: GameVideo[]\n}\n\nclass GameVideos extends React.Component<IGameVideosProps> {\n  public render() {\n    const { gameVideos } = this.props;\n\n    const cards = gameVideos.map(gameVideo => {\n      const title = (\n        <span>{gameVideo.video.title} | {gameVideo.summoner.name} as {gameVideo.champion.name}</span>\n      );\n      const colKey = gameVideo.game.id + \"-\" + gameVideo.video.id;\n      const gameStartTime = moment(gameVideo.game.startTimestamp * 1000).calendar();\n      return (\n        <Col span={8} key={colKey} data-game-id={gameVideo.game.id} data-twitch-video-id={gameVideo.video.id}>\n          <Card title={title} bordered={false}>\n            <a href={gameVideo.video.url} target={\"_blank\"}>\n              <img\n                src={this.getVideoThumbnail(gameVideo.video)}\n                style={{ width: \"100%\" }}\n              />\n            </a>\n\n            <span>\n              {gameVideo.summoner.name} playing {gameVideo.champion.name}\n            </span>\n\n            <br />\n\n            <span>\n              {gameStartTime}\n            </span>\n          </Card>\n        </Col>\n      )\n    });\n\n    return (\n      <div style={{ padding: \"30px\" }}>\n        <Row gutter={8}>\n          {cards}\n        </Row>\n      </div>\n    );\n  }\n\n  private getVideoThumbnail(video: Video): string {\n    return video.thumbnailImageUrl.replace(\"%{width}\", \"800\").replace(\"%{height}\", \"450\");\n  }\n}\n\nexport default GameVideos;\n","import React from 'react';\n\nimport './SearchGamesResultPage.css';\nimport {SearchGameVideosRequest, SearchGameVideosResponse} from \"../../../../state/lol/games/searchGamesModel\";\nimport GameVideos from \"../../../GameVideos/GameVideos\";\n\ninterface ISearchGamesResultPageProps {\n  request: SearchGameVideosRequest\n  response?: SearchGameVideosResponse\n}\n\nexport class SearchGamesResultPage extends React.Component<ISearchGamesResultPageProps> {\n  public render() {\n    return (\n      <div>\n        {this.getPageContent()}\n      </div>\n    );\n  }\n\n  private getPageContent() {\n    const response = this.props.response;\n    if (!response) {\n      return \"...loading\";\n    }\n\n    if (response && response.gameVideos.length === 0) {\n      return \"none found\";\n    }\n\n    return (\n      <GameVideos gameVideos={response.gameVideos}/>\n    );\n  }\n}\n\nexport default SearchGamesResultPage;\n","import React from 'react';\n\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { ButtonType } from \"antd/es/button\";\n\ninterface ILinkButtonProps {\n  to: string;\n  type: ButtonType\n}\n\nexport class LinkButton extends React.Component<ILinkButtonProps> {\n  public render() {\n    return (\n      <Button type={this.props.type}>\n        <Link to={this.props.to}>\n          {this.props.children}\n        </Link>\n      </Button>\n    );\n  }\n}\n\nexport default LinkButton;\n","import React from \"react\";\n\nimport { Input, Form } from \"antd\";\nimport { FormComponentProps } from \"antd/es/form\";\nimport LinkButton from \"../../../Common/LinkButton\";\n\ninterface ISearchGamesFormProps extends FormComponentProps {\n  twitchLogin?: string,\n  summonerName?: string,\n  championName?: string\n}\n\ninterface FormState {\n  twitchLogin?: string,\n  summonerName?: string,\n  championName?: string\n}\n\nclass SearchGamesFormInner extends React.Component<ISearchGamesFormProps> {\n  state: FormState = {\n\n  };\n\n  public render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const { twitchLogin, summonerName, championName } = this.state;\n\n    const itemLayout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }};\n    return (\n      <Form onChange={this.onChange}>\n          <Form.Item {...itemLayout} label={\"Twitch.tv\"}>\n            {getFieldDecorator(\"twitchLogin\", {initialValue: \"doublelift\"})(\n              <Input size={\"large\"} placeholder={\"twitch login name\"} />\n            )}\n          </Form.Item>\n\n        <Form.Item {...itemLayout} label={\"Summoner Name\"}>\n          {getFieldDecorator(\"summonerName\", {initialValue: \"doublelift\"})(\n            <Input size={\"large\"} placeholder={\"LoL summoner name\"} />\n          )}\n        </Form.Item>\n\n        <Form.Item {...itemLayout} label={\"Champion Name\"}>\n          {getFieldDecorator(\"championName\", {initialValue: \"ezreal\"})(\n            <Input size={\"large\"} placeholder={\"LoL champion name\"} />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator(\"search\")(\n            <LinkButton\n              to={`/lol/games/search/results/streamer/${twitchLogin}/summoner/${summonerName}/champion/${championName}`}\n              type={\"primary\"}\n            >\n              Search\n            </LinkButton>\n          )}\n        </Form.Item>\n      </Form>\n    );\n\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const twitchLogin = this.props.form.getFieldValue(\"twitchLogin\");\n    const summonerName = this.props.form.getFieldValue(\"summonerName\");\n    const championName = this.props.form.getFieldValue(\"championName\");\n\n    this.setState({\n      twitchLogin,\n      summonerName,\n      championName\n    });\n  }\n}\n\nexport const SearchGamesForm = Form.create({name: \"Search_Games\"})(SearchGamesFormInner);\nexport default SearchGamesForm;\n","import React from 'react';\n\nimport { Row, Col } from 'antd';\n\nimport './SearchGamesLandingPage.css';\nimport SearchGamesForm from \"../SearchGamesForm/SearchGamesForm\";\n\ninterface ISearchGamesLandingPageProps {\n}\n\nexport class SearchGamesLandingPage extends React.Component<ISearchGamesLandingPageProps> {\n  public render() {\n    // @TODO vertically center everything\n    return (\n      <div>\n        <Row>\n          <Col span={12} offset={6} style={{textAlign: \"center\"}}>\n            <SearchGamesForm />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SearchGamesLandingPage;\n","import React from 'react';\n\nimport { Route, Switch, withRouter } from \"react-router\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nimport { PageRoutes } from \"./PageRoutes\";\n\nclass PageRouter extends React.Component<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <Switch>\n        <Route exact path={\"/\"} component={PageRoutes.SearchLolGamesLanding.component} />\n        <Route exact path={PageRoutes.SearchLolGamesLanding.path} component={PageRoutes.SearchLolGamesLanding.component} />\n        <Route path={PageRoutes.SearchLolGamesResult.path} component={PageRoutes.SearchLolGamesResult.component} />\n      </Switch>\n    );\n  }\n}\n\nexport default withRouter(PageRouter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nimport PageRouter from \"../PageRouter/PageRouter\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\n\nexport class AppLayout extends React.Component<RouteComponentProps<{}>> {\n  public render() {\n    return (\n      <div>\n        <Layout style={{minHeight: \"100vh\"}}>\n          <Layout>\n            <Content style={{margin: \"16px 16px\"}}>\n              <PageRouter /> {/** Main Application Window **/}\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect<null, null>(null, null)(AppLayout));\n","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { configureStore } from \"../../state/store/configureStore\";\n\nimport AppLayout from \"../AppLayout/AppLayout\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={configureStore()}>\n        <HashRouter>\n          <AppLayout />\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" name.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}